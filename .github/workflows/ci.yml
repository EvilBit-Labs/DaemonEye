name: CI

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]
    workflow_dispatch:
    workflow_run:
        workflows: ["autofix.ci"]
        types: [completed]

defaults:
    run:
        shell: bash

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

env:
    CARGO_TERM_COLOR: always
    CI: true
    GITHUB_ACTIONS: true

jobs:
    # Code quality checks - only need to run once
    quality:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v5
            - uses: actions-rust-lang/setup-rust-toolchain@v1
              with:
                  components: rustfmt, clippy

            - name: Install just
              uses: extractions/setup-just@v3

            - name: Cache Rust dependencies
              uses: Swatinem/rust-cache@v2

            - name: Rustfmt Check
              uses: actions-rust-lang/rustfmt@v1

            - name: Run clippy (default features)
              run: cargo clippy -- -D warnings

            - name: Run clippy (minimal features)
              run: cargo clippy --default-features -- -D warnings

    test:
        runs-on: ubuntu-latest
        needs: quality
        steps:
            - uses: actions/checkout@v5

            - name: Setup Rust
              uses: actions-rust-lang/setup-rust-toolchain@v1
              with:
                  components: rustfmt, clippy

            - name: Install cargo-nextest
              uses: taiki-e/install-action@v2
              with:
                  tool: cargo-nextest

            - name: Run tests (default features)
              run: cargo nextest run

            - name: Build release
              run: cargo build --release

    # Test cross-platform
    test-cross-platform:
        strategy:
            matrix:
                include:
                    - os: ubuntu-latest
                      platform: "Linux"
                    - os: macos-latest
                      platform: "macOS"
                    - os: windows-latest
                      platform: "Windows"
        runs-on: ${{ matrix.os }}
        needs: quality
        steps:
            - uses: actions/checkout@v5

            - name: Setup Rust
              uses: actions-rust-lang/setup-rust-toolchain@v1

            - name: Install cargo-nextest
              uses: taiki-e/install-action@v2
              with:
                  tool: cargo-nextest

            # Run tests and build the release binary
            - run: cargo nextest run
            - run: cargo build --release

    # Generate coverage for TLS-enabled builds
    coverage:
        runs-on: ubuntu-latest
        needs: [test, test-cross-platform]
        steps:
            - uses: actions/checkout@v5

            - name: Setup Rust
              uses: actions-rust-lang/setup-rust-toolchain@v1
              with:
                  components: rustfmt, clippy

            - name: Install cargo-llvm-cov
              uses: taiki-e/install-action@v2
              with:
                  tool: cargo-llvm-cov

            - name: Generate coverage
              run: cargo llvm-cov --workspace --no-report

            - name: Combine coverage reports
              run: cargo llvm-cov report --lcov --output-path lcov.info

            - name: Upload to Codecov
              uses: codecov/codecov-action@v5
              with:
                  files: lcov.info
                  fail_ci_if_error: false
                  token: ${{ secrets.CODECOV_TOKEN }}
                  slug: EvilBit-Labs/sentineld
