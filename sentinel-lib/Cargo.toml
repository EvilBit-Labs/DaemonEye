[package]
name = "sentinel-lib"
edition = "2024"
version = "0.1.0"
authors = ["UncleSp1d3r", "Krypdo3"]
license = "Apache-2.0"
rust-version = "1.85"
description = "Shared library for SentinelD common functionality"
repository = "https://github.com/EvilBit-Labs/SentinelD"
homepage = "https://evilbitlabs.io/sentineld"
publish = false

# Inherit workspace lint configuration
[lints]
workspace = true

[package.metadata.cargo-machete]
ignored = ["anyhow", "tracing"]

# Feature flags
[features]
default = ["process-collection", "detection-engine", "alerting", "ipc"]

# Component features
process-collection = []
detection-engine = ["sqlparser"]
alerting = []
kernel-monitoring = []
network-correlation = []

# IPC transport features
ipc = [] # Use interprocess transport (cross-platform)

[dependencies]
anyhow = { workspace = true }

# Async traits
async-trait = { workspace = true }

# Cryptographic hashing
blake3 = { workspace = true }
bytes = { workspace = true }

# Date/time handling
chrono = { workspace = true }
crc32c = { workspace = true }

# Futures utilities
futures = { workspace = true }
futures-util = { workspace = true }

# IPC communication
interprocess = { workspace = true }

# Protocol Buffers support
prost = { workspace = true }
prost-types = { workspace = true }
rand = { workspace = true }

# Database
redb = { workspace = true }
rs_merkle = { workspace = true }
# Core dependencies used by all components
serde = { workspace = true }

# Serialization
serde_json = { workspace = true }
serde_yaml = { workspace = true }
sha2 = { workspace = true }

# SQL parsing and validation
sqlparser = { workspace = true, optional = true }

# System information
sysinfo = { workspace = true }

# Additional dependencies
tempfile = { workspace = true }
thiserror = { workspace = true }

# Async runtime
tokio = { workspace = true }
tracing = { workspace = true }

# UUID support
uuid = { workspace = true }

[build-dependencies]
prost-build = { workspace = true }

[dev-dependencies]
assert_cmd = { workspace = true }
criterion = { workspace = true }
predicates = { workspace = true }
proptest = { workspace = true }
