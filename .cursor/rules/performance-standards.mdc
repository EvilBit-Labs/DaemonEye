---
globs: **/*.rs
---

# Performance Standards for SentinelD

## Performance Requirements

- **CPU Usage**: <5% sustained during continuous monitoring
- **Memory Usage**: <100MB resident under normal operation
- **Process Enumeration**: <5s for 10,000+ processes
- **Database Operations**: >1,000 records/sec write rate
- **Alert Latency**: <100ms per detection rule execution

## Async Design

- Use async-first design with Tokio runtime
- Implement proper task spawning and management
- Use connection pooling for database operations
- Implement backpressure handling

## Database Performance

- Use redb embedded database for optimal performance and security
- Implement concurrent access with ACID transactions
- Use zero-copy deserialization for efficiency
- Implement proper indexing strategies for time-series queries

## Memory Management

- Use efficient data structures
- Implement proper cleanup and resource management
- Monitor memory usage in production
- Use streaming for large data sets

## Process Collection

- Use `sysinfo` crate for cross-platform process enumeration
- Implement platform-specific optimizations where beneficial
- Handle permission denied gracefully with partial data collection
- Use efficient data structures for process information

## Monitoring and Metrics

- Implement Prometheus metrics for operational monitoring
- Monitor resource usage and alert on thresholds
- Provide performance optimization hints
