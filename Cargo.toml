# SentinelD Workspace Root
# This file defines the workspace and shared dependencies

[workspace]
members = ["procmond", "sentinel-lib", "sentinelagent", "sentinelcli"]
resolver = "3"

[workspace.package]
version = "0.1.0"
authors = ["UncleSp1d3r", "Krypdo3"]
license = "Apache-2.0"
rust-version = "1.85"
repository = "https://github.com/EvilBit-Labs/SentinelD"
homepage = "https://evilbitlabs.io/sentineld"
edition = "2024"

# Overpinning the versions is breaking the cross-platform functionality, so we are limiting pinning to minor versions.
[workspace.dependencies]
# Core error handling and utilities
anyhow = "1.0.100"

# Testing
assert_cmd = "2.0"

# Async traits
async-trait = "0.1"

# Binary serialization
bincode = "2.0.1"

# Cryptographic hashing
blake3 = "1.8.2"
bytes = "1.10.1"

# Date/time
chrono = { version = "0.4.42", features = ["serde"] }

# CLI
clap = { version = "4.5.48", features = ["derive"] }

# CRC32 checksum
crc32fast = "1.5.0"
criterion = "0.7.0"
futures = "0.3.31"
futures-util = "0.3.31"
insta = "1.43"

# IPC communication
interprocess = { version = "2.2.3", features = ["tokio"] }
predicates = "3.1.3"
proptest = "1.7.0"

# Protocol Buffers
prost = "0.14.1"
prost-build = "0.14.1"
prost-types = "0.14.1"
rand = "0.9.2"

# Database
redb = "3.0.2"

# Cryptographic operations
rs_merkle = "1.5.0"

# Internal library
sentinel-lib = { path = "sentinel-lib" }

# Serialization
serde = { version = "1.0.225", features = ["derive"] }
serde_json = "1.0.145"
serde_yaml = "0.9.33"
sha2 = "0.10.9"

# SQL parsing
sqlparser = "0.58.0"

# System information
sysinfo = "0.37.0"

# Temporary files
tempfile = "3.22.0"
thiserror = "2.0.16"

# Async runtime
tokio = { version = "1.47.1", features = [
    "rt",
    "rt-multi-thread",
    "net",
    "io-util",
    "time",
    "process",
    "macros",
    "sync",
    "fs",
    "signal",
] }

# Logging
tracing = "0.1.41"
tracing-subscriber = { version = "0.3.20", features = ["env-filter"] }

# UUID support
uuid = { version = "1.18.1", features = ["v4", "serde"] }

# Workspace lint configuration
[workspace.lints.rust]
# Security: Forbid unsafe code globally
unsafe_code = "forbid"
# Zero warnings policy
# warnings = "deny"

[workspace.lints.clippy]
# Pedantic clippy configuration with proper priorities
all = { level = "warn", priority = -1 }
pedantic = { level = "warn", priority = -1 }
nursery = { level = "warn", priority = -1 }
cargo = { level = "warn", priority = -1 }

# Security-focused linting
as_conversions = "warn"
as_ptr_cast_mut = "warn"
cast_ptr_alignment = "warn"
float_cmp = "warn"
indexing_slicing = "warn"
arithmetic_side_effects = "warn"
integer_division = "warn"
modulo_arithmetic = "warn"
panic = "forbid"                 # DON'T PANIC IN PRODUCTION
unwrap_used = "deny"             # DON'T UNWRAP IN PRODUCTION
expect_used = "warn"

# Security anti-patterns
# allow_attributes = "warn"
dbg_macro = "warn"
# print_stdout = "warn"
# print_stderr = "warn"
todo = "warn"
unimplemented = "warn"
unreachable = "warn"

# Performance and correctness
correctness = { level = "deny", priority = -1 }
suspicious = { level = "warn", priority = -1 }
perf = { level = "warn", priority = -1 }
await_holding_lock = "deny"
clone_on_ref_ptr = "warn"
create_dir = "warn"
exit = "warn"
filetype_is_file = "warn"
float_equality_without_abs = "warn"
if_then_some_else_none = "warn"
# invalid_from_utf8_unchecked = "warn"  # Not available in clippy
large_stack_arrays = "warn"
let_underscore_must_use = "warn"
lossy_float_literal = "warn"
map_err_ignore = "warn"
match_same_arms = "warn"
missing_assert_message = "warn"
missing_docs_in_private_items = "allow"
mixed_read_write_in_expression = "warn"
mutex_atomic = "warn"
mutex_integer = "warn"
non_ascii_literal = "warn"
non_send_fields_in_send_ty = "warn"
partial_pub_fields = "warn"
pattern_type_mismatch = "warn"
rc_buffer = "warn"
rc_mutex = "warn"
redundant_type_annotations = "warn"
ref_binding_to_reference = "warn"
same_name_method = "warn"
self_named_module_files = "warn"
semicolon_inside_block = "warn"
semicolon_outside_block = "warn"
shadow_reuse = "warn"
shadow_same = "warn"
shadow_unrelated = "warn"
str_to_string = "warn"
string_add = "warn"
string_add_assign = "warn"
string_lit_as_bytes = "warn"
string_slice = "warn"
suspicious_operation_groupings = "warn"
trailing_empty_array = "warn"
transmute_undefined_repr = "warn"
trivial_regex = "warn"
undocumented_unsafe_blocks = "warn"
unnecessary_self_imports = "warn"
unseparated_literal_suffix = "warn"
unused_async = "warn"
unused_peekable = "warn"
unused_rounding = "warn"
use_debug = "warn"
verbose_file_reads = "warn"
wildcard_enum_match_arm = "warn"
zero_sized_map_values = "warn"

# Allow specific lints that are too noisy for this project
missing_errors_doc = "allow"
missing_panics_doc = "allow"
must_use_candidate = "allow"
cast_possible_truncation = "allow"
cast_precision_loss = "allow"
cast_sign_loss = "allow"
module_name_repetitions = "allow"
similar_names = "allow"
too_many_lines = "allow"
type_complexity = "allow"
async_yields_async = "allow"
large_futures = "allow"
result_large_err = "allow"
cargo_common_metadata = "allow"
multiple_crate_versions = "allow"

# The profile that 'dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"
overflow-checks = true
